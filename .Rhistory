exit
exit()
quit
quit()
library(ggplot2)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages('ggplot2')
install.packages('knitr')
install.packages('lattice')
getwd()
setwd('/Users/juhee/dee-code/RepData_PeerAssessment1/')
?read.csv
data = read.csv("activity.csv")
names(data)
?strtptime
?strptime
data$datetime = strptime(paste(data$date, data$interval), format="%Y-%m-%d %H%M")
str(data)
paste("hello", "world")
data$datetime = strptime(paste(data$date, data$interval), format="%Y-%m-%d %k")
str(data)
data$datetime = strptime(paste(data$date, sprintf("%03d", data$interval)), format="%Y-%m-%d %k")
str(data)
data$datetime = strptime(paste(data$date, sprintf("%04d", data$interval)), format="%Y-%m-%d %k")
str(data)
sprintf("%4d", 0)
sprintf("%04d", 0)
sprintf("%04d", 5)
data$datetime = strptime(paste(data$date, sprintf("%04d", data$interval)), format="%Y-%m-%d %k")
sprintf("%04d", 10)
data$datetime = strptime(paste(data$date, sprintf("%04d", data$interval)), format="%Y-%m-%d %H%M")
sprintf("%04d", 10)
str(data)
hist(data$steps)
?dput
?aggregate
help(formula)
?aggregate
data[, c("steps"]
data[, c("steps")]
data[, c("steps", "date")]
daydata = aggregate(data[, c("steps", "date")], by=list("date"), FUN=sum)
daydata = aggregate(data$step, by=list(data$date), FUN=sum)
daydata = aggregate(data$steps, by=list(data$date), FUN=sum)
daydata
daydata = aggregate(steps ~ date, data = data, FUN = sum)
daydata
names(daydata)
daydata = aggregate(steps ~ date, data = data, FUN = sum)
hist(daydata$steps)
hist(daydata$steps, col="red")
hist(daydata$steps, col="red", main="Histogram of total steps per day")
hist(daydata$steps, col="red", main="Histogram of total steps per day", ylab="Total steps per day")
hist(daydata$steps, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
str(daydata$steps)
summary(daydata$steps)
class(summary(daydata$steps))
summary(daydata$steps)$Mean
a = summary(daydata$steps)
names(a)
a$Min.
mean(steps)
mean(data$steps)
mean(daydata$steps)
mean(daydata$steps)
median(daydata$steps)
?summary
a = summary(daydata$steps)
summary(daydata$steps)
mean(daydata$steps)
mean(daydata$steps, digits=5)
summary(daydata$steps, digits=5)
?mean
summary(daydata$steps, digits=5)
summary(daydata$steps, digits=5)[[1]]
summary(daydata$steps, digits=5)[[2]]
summary(daydata$steps, digits=5)[[3]]
intervaldata = aggregate(steps ~ interval, data = data, FUN = mean)
intervaldata
?xyplot
library(lattice)
?xyplot
xyplot(steps ~ interval, data=intervaldata)
?xyplot
xyplot(steps ~ interval, data=intervaldata, type='b')
?xyplot
xyplot(steps ~ interval, data=intervaldata, type='l')
?max
?which
?which.max
which.max(intervaldata$steps)
intervaldata[which.max(intervaldata$steps), ]
?complete.cases
complete.cases(data)
data
complete.cases(data)
complete.cases(data$steps)
sapply(data, function(x) sum(is.na(x)))
intervaldata[intervaldata$interval="0"]
intervaldata[intervaldata$interval="00"]
intervaldata[intervaldata$interval=="00"]
intervaldata[, intervaldata$interval=="00"]
intervaldata[intervaldata$interval=="00"]
intervaldata[intervaldata$interval=="0000"]
intervaldata[intervaldata$interval=="0"]
intervaldata
str(intervaldata)
intervaldata[intervaldata$interval==0]
intervaldata[intervaldata$interval==0, ]
intervaldata[intervaldata$interval==5, ]
intervaldata[intervaldata$interval==5, ]$interval
intervaldata[intervaldata$interval==5, ]$steps
d1 = data
data_filled$steps
data$steps
data_filled = data
data$steps
data_filled$steps
data_filled$steps(is.na(step))
data_filled$steps(is.na(data_filled$step))
data_filled$steps[is.na(data_filled$step)]
data_filled$steps[is.na(data_filled$steps)]
data_filled[is.na(data_filled$steps)]
data_filled[is.na(data_filled$steps), ]
data_filled$steps[is.na(data_filled$steps)]
names($data_filled)
names(data_filled)
str(data_filled)
str(data)
data$steps
data$steps(is.na(data$steps))
data$steps[is.na(data$steps)]
is.na(data$steps)
data[is.na(data$steps)] = intervaldata[intervaldata$interval==data$steps, ]$steps
data[is.na(data$steps)]$steps = intervaldata[intervaldata$interval==data$steps, ]$steps
data[is.na(data$steps)]
data[is.na(data$steps), ]
data[is.na(data$steps), ]$steps
data[is.na(data$steps), ]$steps = intervaldata[intervaldata$interval==data$steps, ]$steps
?LAPPLY
?lapply
?apply
?mapply
?apply
?sapply
?apply
?mapply
str(data)
f <- function(steps, interval) {
if (is.na(d$steps)) intervaldata[intervaldata$interval==interval, ]$steps
else steps
}
data$steps1 = mappy(f, data$steps, data$interval)
data$steps1 = mapply(f, data$steps, data$interval)
f <- function(steps, interval) {
if (is.na(steps)) intervaldata[intervaldata$interval==interval, ]$steps
else steps
}
data$steps1 = mapply(f, data$steps, data$interval)
str(data)
data$steps_filled = mapply(f, data$steps, data$interval)
daydata = aggregate(steps_filled ~ date, data = data, FUN = sum)
hist(daydata$steps_filled, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
mean(daydata$steps_filled)
median(daydata$steps_filled)
daydata$steps_filled
?weekdays
weekday(data[1, ]$datetime)
weekdays(data[1, ]$datetime)
weekdays(data[1, ]$datetime)
weekdays(data$date)
weekdays(data$datetime)
str(weekdays(data$datetime))
as.factor(weekdays(data$datetime))
?as.factor
?weekday
?weekdays
?as.factor
levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
labels = c("Weekday", "Weekday", "Weekday", "Weekday", "Weekday", "Weekend", "Weekend")
data$day = as.factor(weekday(data$datetime), levels=levels, labels=labels);
data$day = as.factor(weekday(data$datetime), levels=levels, labels=labels)
data$day = as.factor(weekday(data$datetime), labels=labels)
levels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
labels <- c("Weekday", "Weekday", "Weekday", "Weekday", "Weekday", "Weekend", "Weekend")
data$day <- as.factor(weekday(data$datetime), levels, labels=labels)
levels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
labels <- c("Weekday", "Weekday", "Weekday", "Weekday", "Weekday", "Weekend", "Weekend")
data$day <- as.factor(weekday(data$datetime), levels, labels=labels)
data$day <- as.factor(weekday(data$datetime), levels, labels=labels)
data$day <- as.factor(weekday(data$datetime))
data$day <- as.factor(weekdays(data$datetime), levels, labels=labels)
data$day <- as.factor(weekdays(data$datetime))
data$day <- as.factor(weekdays(data$datetime), levels)
data$day <- as.factor(weekdays(data$datetime), levels=levels)
data$day <- as.factor(weekdays(data$datetime), labels=levels)
data$day <- factor(weekdays(data$datetime), levels, labels=labels)
date$day
data$day
?histogram
?hist
hist(daydata$steps_filled, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
hist(daydata$steps_filled, breaks=100, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
hist(daydata$steps_filled, breaks=1000, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
hist(daydata$steps_filled, breaks=10, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
hist(daydata$steps_filled, breaks=5, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
hist(daydata$steps_filled, breaks=5, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
?hist
hist(daydata$steps_filled, breaks=10, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
?hist
?xyplot
/BARCHART
?barchart
barchart(steps_filled, daydata)
barchart(daydata$steps_filled, daydata)
?barchart
stripplot(steps_filled, daydata)
stripplot(daydata$steps_filled, daydata)
stripplot(daydata$steps_filled)
?stripplot
?xyplot
?histogram
stripplot(daydata$steps_filled)
histogram(daydata$steps_filled)
?histogram
histogram(~steps_filled, daydata)
?histogram
histogram(~steps_filled, daydata)
hist(daydata$steps_filled, breaks=10, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
histogram(~steps_filled, daydata)
hist(daydata$steps_filled, breaks=10, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
histogram(~steps_filled, daydata)
?histogram
histogram(~steps_filled, daydata, type="count")
?histogram
histogram(~steps_filled, daydata, type="count", breaks=10)
histogram(~steps_filled, daydata, type="count", breaks=10)
factor(weekdays(data$datetime), levels, labels=labels)
?factor
?factor
?mapvalues
levels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
data$day <- factor(weekdays(data$datetime), levels, labels=labels)
levels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
data$day <- factor(weekdays(data$datetime), levels)
str(data)
levels(data$day)
levels(data$day) <- c("A", "B")
?factor
levels(data$day) <- c("A", "A", "A", "A", "A", "B", "B")
levels(data$day)
str(day)
str(data)
levels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
data$day <- factor(weekdays(data$datetime), levels)
labels <- c("Weekday", "Weekday", "Weekday", "Weekday", "Weekday", "Weekend", "Weekend")
levesl(data$day) <- labels
levels(data$day) <- labels
str(data)
intervaldata = aggregate(steps_filled ~ interval, data = data, FUN = mean)
intervaldata
str(intervaldata)
?aggregate
split(data, data$day)
split(data, data$day)$Weekday
split(data, data$day)$Weekend
?xyplot
?aggregate
intervaldata = aggregate(steps_filled ~ interval+weekday, data = data_weekday, FUN = mean)
intervaldata = aggregate(steps_filled ~ interval+weekday, data = data, FUN = mean)
intervaldata = aggregate(steps_filled ~ interval+day, data = data, FUN = mean)
str(intervaldata)
head(intervaldata)
intervaldata
str(data)
str(intervaldata)
intervaldata = aggregate(steps_filled ~ interval+day, data = data, FUN = mean)
levels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
data$day <- factor(weekdays(data$datetime), levels)
labels <- c("Weekday", "Weekday", "Weekday", "Weekday", "Weekday", "Weekend", "Weekend")
levels(data$day) <- labels
intervaldata = aggregate(steps_filled ~ interval+day, data = data, FUN = mean)
xyplot(steps ~ interval|day, data=intervaldata, type='l')
str(intervaldata)
help(xyplot)
xyplot(steps_filled ~ interval|day, data=intervaldata, type='l', layout=c(2,1))
xyplot(steps_filled ~ interval|day, data=intervaldata, type='l', layout=c(1,2))
intervaldata = aggregate(steps ~ interval+day, data = data, FUN = mean)
xyplot(steps ~ interval|day, data=intervaldata, type='l', layout=c(2,1))
xyplot(steps ~ interval|day, data=intervaldata, type='l', layout=c(1,2))
is.na(data$steps_filled)
which(is.na(data$steps_filled))
?which
xyplot(steps ~ interval|day, data=intervaldata, type='l', layout=c(2,1))
xyplot(steps ~ interval|day, data=intervaldata, type='l', layout=c(1,2))
?knit2html
?knitr2html
library(knitr)
?knit2html
knit2html("PA1_template.Rmd", "PA1_template.html")
daydata
str(daydata)
str(data)
daydata = aggregate(steps ~ date, data = data, FUN = sum)
str(daydata)
mean(daydata$steps)
median(daydata$steps)
data$steps_filled = mapply(f, data$steps, data$interval)
f <- function(steps, interval) {
if (is.na(steps)) intervaldata[intervaldata$interval==interval, ]$steps
else steps
}
data$steps_filled = mapply(f, data$steps, data$interval)
warnings()
str(f)
data$steps_filled = mapply(f, data$steps, data$interval)
warnings()
warnings()
warnings()
intervaldata = aggregate(steps ~ interval, data = data, FUN = mean)
data$steps_filled = mapply(f, data$steps, data$interval)
data = read.csv("activity.csv")
```
Let us add a datetime field combining date and time for further processing if required.
```{r}
data$datetime = strptime(paste(data$date, sprintf("%04d", data$interval)), format="%Y-%m-%d %H%M")
data$datetime = strptime(paste(data$date, sprintf("%04d", data$interval)), format="%Y-%m-%d %H%M")
daydata = aggregate(steps ~ date, data = data, FUN = sum)
hist(daydata$steps, breaks=10, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
mean(daydata$steps)
median(daydata$steps)
intervaldata = aggregate(steps ~ interval, data = data, FUN = mean)
xyplot(steps ~ interval, data=intervaldata, type='l')
intervaldata[which.max(intervaldata$steps), ]
sapply(data, function(x) sum(is.na(x)))
f <- function(steps, interval) {
if (is.na(steps)) intervaldata[intervaldata$interval==interval, ]$steps
else steps
}
data$steps_filled = mapply(f, data$steps, data$interval)
daydata <- aggregate(steps_filled ~ date, data = data, FUN = sum)
hist(daydata$steps_filled, breaks=10, col="red", main="Histogram of total steps per day", xlab="Total steps per day")
mean(daydata$steps_filled)
median(daydata$steps_filled)
levels <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
data$day <- factor(weekdays(data$datetime), levels)
labels <- c("Weekday", "Weekday", "Weekday", "Weekday", "Weekday", "Weekend", "Weekend")
levels(data$day) <- labels
intervaldata = aggregate(steps_filled ~ interval+day, data = data, FUN = mean)
xyplot(steps_filled ~ interval|day, data=intervaldata, ylab="Number of steps", type='l', layout=c(1,2))
warnings()
?warning
?warnings
options(ow)
options(options("warn"))
?warnings
warnings()
?knit2html
?knit
?knit2html
knit2html("PA1_template.Rmd")
